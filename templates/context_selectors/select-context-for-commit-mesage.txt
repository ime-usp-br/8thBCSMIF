**Sua Tarefa ÚNICA e ABSOLUTAMENTE RESTRITA:**
Com base na descrição da tarefa principal e no manifesto JSON fornecido, selecione os arquivos **MAIS RELEVANTES** do manifesto que fornecerão o contexto ótimo para a IA realizar a tarefa principal.

**Tarefa Principal:** Gerar uma mensagem de commit Git concisa e informativa que descreva as alterações recentes, seguindo o padrão Conventional Commits e o estilo histórico do projeto. A mensagem deve referenciar a Issue e o AC principal relacionados às mudanças.

**Manifesto JSON Fornecido:**
Você receberá um dicionário JSON (aninhado sob a chave `files`) contendo metadados de arquivos do projeto (path, type, summary, token_count, etc.). Este manifesto JÁ FOI FILTRADO para excluir arquivos muito grandes.

**Seu Processo de Seleção:**
1.  Entenda profundamente o objetivo da **Tarefa Principal**: gerar uma mensagem de commit Git para as últimas alterações.
2.  Analise os metadados de CADA arquivo no `manifest.json` fornecido (path, type, summary).
3.  Selecione APENAS os arquivos CRÍTICOS que contenham:
    *   Os diffs das alterações que precisam ser commitadas (`git_diff_cached.txt`, `git_diff_unstaged.txt`).
    *   O histórico de commits recentes (`git_log.txt`) para inferir o estilo e formato.
    *   Os detalhes da(s) Issue(s) principal(is) relacionadas às alterações (`github_issue_*_details.json`).
    *   Os guias de desenvolvimento que definem os padrões de commit (`guia_de_desenvolvimento.md`, `padroes_codigos_boas_praticas.md`).
4.  **Priorize:** Diffs, log e detalhes da issue são essenciais. Guias são secundários, mas úteis.
5.  **Exclua:** Código fonte completo, testes, arquivos de configuração gerais, dependências, e outros arquivos de contexto não diretamente relacionados à *descrição das mudanças recentes* ou ao *estilo de commit*, a menos que o `summary` indique uma relevância muito alta e específica para entender o *propósito* do commit.

**Formato de Saída OBRIGATÓRIO E ESTRITO:**
Sua resposta DEVE ser **APENAS E SOMENTE APENAS** um objeto JSON válido contendo UMA ÚNICA chave chamada `relevant_files`. O valor desta chave DEVE ser uma LISTA (array JSON) de strings, onde cada string é o caminho relativo EXATO de um arquivo selecionado do manifesto.

**Exemplo de Saída:**
```json
{
  "relevant_files": [
    "context_llm/code/YYYYMMDD_HHMMSS/git_diff_cached.txt",
    "context_llm/code/YYYYMMDD_HHMMSS/git_log.txt",
    "context_llm/code/YYYYMMDD_HHMMSS/github_issue_XYZ_details.json",
    "docs/guia_de_desenvolvimento.md"
  ]
}
```

**REGRAS ADICIONAIS:**
-   **NÃO** inclua NENHUM texto explicativo, introdução, saudação ou qualquer outra coisa fora do objeto JSON.
-   Sua resposta completa DEVE começar com `{` e terminar com `}`.
-   Se NENHUM arquivo for considerado relevante (improvável para esta tarefa), retorne `{"relevant_files": []}`.