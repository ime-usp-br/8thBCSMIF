
Sua tarefa é gerar **APENAS E SOMENTE APENAS** o texto completo de uma mensagem de commit Git, analisando **TODOS** os arquivos de contexto anexados (diffs, logs, issues, guias) com **prioridade MÁXIMA** na replicação do estilo dos commits anteriores encontrados em `git_log.txt`.

Siga **OBRIGATORIAMENTE, SEM EXCEÇÕES E COM MÁXIMA FIDELIDADE** estas diretrizes:

1.  **PRIORIDADE #1 - CONSISTÊNCIA HISTÓRICA:** Analise **profundamente** o arquivo `git_log.txt`. Sua mensagem **DEVE OBRIGATORIAMENTE** espelhar o **mesmo padrão, tom, estrutura, nível de detalhe, capitalização e formato de referência de Issue/AC** dos commits *anteriores* nesse log. A uniformidade histórica é **ABSOLUTAMENTE CRÍTICA**. Se o estilo histórico conflitar com outras regras, **o estilo histórico PREVALECE**.
2.  **DEDUÇÃO OBRIGATÓRIA:** Analise `git_diff_cached.txt`, `git_diff_unstaged.txt`, e `github_issue_*_details.json` para **deduzir** a Issue principal (`__NUMERO_DA_ISSUE__`) e, se aplicável e presente no histórico, o AC principal (`__NUMERO_DO_AC__`) relacionados às *últimas* alterações. Use estas informações na mensagem, seguindo o *formato exato* do histórico.
3.  **PADRÕES DO PROJETO (SECUNDÁRIO):** Siga o formato Conventional Commits (`<tipo>(<escopo>): <descrição> (#IssueID)`) conforme `guia_de_desenvolvimento.md`, **MAS APENAS SE** isso não contradisser o estilo predominante em `git_log.txt`. A referência à Issue/AC deduzidos é obrigatória.
4.  **CONTEÚDO:** Explique *o quê* foi feito e *por quê* de forma direta, mantendo o nível de detalhe do histórico. Mencione o AC principal atendido (se aplicável e comum no histórico).
5.  **IDIOMA:** Use **português do Brasil**. Nomenclatura técnica em inglês (conforme histórico).
6.  **BASEADO NO CONTEXTO:** Baseie-se **UNICAMENTE** nas alterações (diffs), histórico (`git_log.txt`), issues e regras documentadas.
7.  **AMBIENTE:** Considere Laravel 12.
8.  **PESQUISA:** Permitida sobre Laravel/Git, mas a *forma* da mensagem segue o histórico.
9.  **PROIBIÇÃO DE REFERÊNCIAS:** **NUNCA** mencione nomes de arquivos de contexto não versionados. Refira-se a arquivos de código versionados.
10. **SAÍDA EXTREMAMENTE RESTRITA:** Sua resposta **DEVE** conter **APENAS E SOMENTE APENAS** o texto completo da mensagem de commit formatada. **NENHUMA PALAVRA OU CARACTERE ADICIONAL.** Comece diretamente com a primeira palavra (provavelmente o tipo, ex: `feat`). Termine imediatamente após a última palavra (provavelmente o `)` da referência da issue).
11. **ANÁLISE:** Analise **todos** os arquivos de contexto, com **ênfase no `git_log.txt`** para estilo e nos **diffs/issues** para conteúdo/dedução.

__OBSERVACAO_ADICIONAL__